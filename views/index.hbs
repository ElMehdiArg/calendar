<!-- <IndexSnippet> -->
<div class="container d-flex justify-content-center">
  <div class="p-3 mb-4 col-md-12 bg-light rounded-3 mt-5 ">
    <div class="p-5 mb-4 bg-light rounded-3">
      <div class="container-fluid py-5">
        <div class="row">
          <div class="col mt-5">
            <h1 class="display-5 fw-bold mt-1 mb-4">Bienvenue <br>{{ user.displayName }}!</h1>
            {{!-- <p class="lead">This app helps you to </p> --}}
            <img src="/images/plant.png" alt="" srcset="" width="100px">
            {{#if user}}
            <h4>Vous utilisez votre compte {{user.provider}}</h4>
            {{/if}}
          </div>
          <div class="col">
            <article class="clock simple">
              <div class="hours-container">
                <div class="hours"></div>
              </div>
              <div class="minutes-container">
                <div class="minutes"></div>
              </div>
              <div class="seconds-container">
                <div class="seconds"></div>
              </div>
            </article>
            <h3 class="col-md-8 fs-6 text-center mt-4" id="currentDate">date</h3>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- </IndexSnippet> -->

<!-- JavaScript to update the time -->
<script>
  /*
 * Starts any clocks using the user's local time
 * From: cssanimation.rocks/clocks
 */
  function initLocalClocks() {
    // Get the local time using JS
    var date = new Date;
    var seconds = date.getSeconds();
    var minutes = date.getMinutes();
    var hours = date.getHours();

    // Create an object with each hand and it's angle in degrees
    var hands = [
      {
        hand: 'hours',
        angle: (hours * 30) + (minutes / 2)
      },
      {
        hand: 'minutes',
        angle: (minutes * 6)
      },
      {
        hand: 'seconds',
        angle: (seconds * 6)
      }
    ];
    // Loop through each of these hands to set their angle
    for (var j = 0; j < hands.length; j++) {
      var elements = document.querySelectorAll('.' + hands[j].hand);
      for (var k = 0; k < elements.length; k++) {
        elements[k].style.webkitTransform = 'rotateZ(' + hands[j].angle + 'deg)';
        elements[k].style.transform = 'rotateZ(' + hands[j].angle + 'deg)';
        // If this is a minute hand, note the seconds position (to calculate minute position later)
        if (hands[j].hand === 'minutes') {
          elements[k].parentNode.setAttribute('data-second-angle', hands[j + 1].angle);
        }
      }
    }
     // Display current date
    var currentDateElement = document.getElementById('currentDate');
    if (currentDateElement) {
      var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
      currentDateElement.textContent = date.toLocaleDateString('en-US', options);
    }
  }

  /*
   * Set a timeout for the first minute hand movement (less than 1 minute), then rotate it every minute after that
   */
  function setUpMinuteHands() {
    // Find out how far into the minute we are
    var containers = document.querySelectorAll('.minutes-container');
    var secondAngle = containers[0].getAttribute('data-second-angle');
    if (secondAngle > 0) {
      // Set a timeout until the end of the current minute, to move the hand smoothly
      var delay = (((360 - secondAngle) / 6) + 0.1) * 1000;
      setTimeout(function () {
        moveMinuteHands(containers);
      }, delay);
    }
  }

  /*
   * Do the first minute's rotation
   */
  function moveMinuteHands(containers) {
    for (var i = 0; i < containers.length; i++) {
      containers[i].style.webkitTransform = 'rotateZ(6deg)';
      containers[i].style.transform = 'rotateZ(6deg)';
    }
    // Then continue with a 60s interval
    setInterval(function () {
      for (var i = 0; i < containers.length; i++) {
        if (containers[i].angle === undefined) {
          containers[i].angle = 12;
        } else {
          containers[i].angle += 6;
        }
        containers[i].style.webkitTransform = 'rotateZ(' + containers[i].angle + 'deg)';
        containers[i].style.transform = 'rotateZ(' + containers[i].angle + 'deg)';
      }
    }, 60000);
  }

  initLocalClocks();
  setUpMinuteHands();
</script>